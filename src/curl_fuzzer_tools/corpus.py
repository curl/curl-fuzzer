"""Common corpus functions"""

import logging
import struct
from pathlib import Path
from typing import BinaryIO, Optional

from curl_fuzzer_tools.curl_test_data import TestData

log = logging.getLogger(__name__)


class BaseType(object):
    """Known TLV types"""

    TYPE_URL = 1
    TYPE_RSP0 = 2
    TYPE_USERNAME = 3
    TYPE_PASSWORD = 4
    TYPE_POSTFIELDS = 5
    TYPE_HEADER = 6
    TYPE_COOKIE = 7
    TYPE_UPLOAD1 = 8
    TYPE_RANGE = 9
    TYPE_CUSTOMREQUEST = 10
    TYPE_MAIL_RECIPIENT = 11
    TYPE_MAIL_FROM = 12
    TYPE_MIME_PART = 13
    TYPE_MIME_PART_NAME = 14
    TYPE_MIME_PART_DATA = 15
    TYPE_HTTPAUTH = 16
    TYPE_RSP1 = 17
    TYPE_RSP2 = 18
    TYPE_RSP3 = 19
    TYPE_RSP4 = 20
    TYPE_RSP5 = 21
    TYPE_RSP6 = 22
    TYPE_RSP7 = 23
    TYPE_RSP8 = 24
    TYPE_RSP9 = 25
    TYPE_RSP10 = 26
    TYPE_OPTHEADER = 27
    TYPE_NOBODY = 28
    TYPE_FOLLOWLOCATION = 29
    TYPE_ACCEPT_ENCODING = 30
    TYPE_SECRSP0 = 31
    TYPE_SECRSP1 = 32
    TYPE_WILDCARDMATCH = 33
    TYPE_RTSP_REQUEST = 34
    TYPE_RTSP_SESSION_ID = 35
    TYPE_RTSP_STREAM_URI = 36
    TYPE_RTSP_TRANSPORT = 37
    TYPE_RTSP_CLIENT_CSEQ = 38
    TYPE_MAIL_AUTH = 39
    TYPE_HTTP_VERSION = 40
    TYPE_DOH_URL = 41
    TYPE_LOGIN_OPTIONS = 42
    TYPE_XOAUTH2_BEARER = 43
    TYPE_USERPWD = 44
    TYPE_USERAGENT = 45
    TYPE_NETRC = 46
    TYPE_SSH_HOST_PUBLIC_KEY_SHA256 = 47
    TYPE_POST = 48
    TYPE_WS_OPTIONS = 49
    TYPE_CONNECT_ONLY = 50
    TYPE_HSTS = 51
    TYPE_HTTPPOSTBODY = 52  # https://curl.se/libcurl/c/CURLOPT_HTTPPOST.html
    TYPE_PROXY = 53
    TYPE_PROXYTYPE = 54

    TYPE_PROXYUSERPWD = 100
    TYPE_REFERER = 101
    TYPE_FTPPORT = 102
    TYPE_SSLCERT = 103
    TYPE_KEYPASSWD = 104
    TYPE_INTERFACE = 105
    TYPE_KRBLEVEL = 106
    TYPE_CAINFO = 107
    TYPE_SSL_CIPHER_LIST = 108
    TYPE_SSLCERTTYPE = 109
    TYPE_SSLKEY = 110
    TYPE_SSLKEYTYPE = 111
    TYPE_SSLENGINE = 112
    TYPE_CAPATH = 113
    TYPE_FTP_ACCOUNT = 114
    TYPE_COOKIELIST = 115
    TYPE_FTP_ALTERNATIVE_TO_USER = 116
    TYPE_SSH_PUBLIC_KEYFILE = 117
    TYPE_SSH_PRIVATE_KEYFILE = 118
    TYPE_SSH_HOST_PUBLIC_KEY_MD5 = 119
    TYPE_ISSUERCERT = 120
    TYPE_PROXYUSERNAME = 121
    TYPE_PROXYPASSWORD = 122
    TYPE_NOPROXY = 123
    TYPE_SSH_KNOWNHOSTS = 124
    TYPE_TLSAUTH_USERNAME = 125
    TYPE_TLSAUTH_PASSWORD = 126
    TYPE_TLSAUTH_TYPE = 127
    TYPE_DNS_SERVERS = 128
    TYPE_DNS_INTERFACE = 129
    TYPE_DNS_LOCAL_IP4 = 130
    TYPE_DNS_LOCAL_IP6 = 131
    TYPE_PINNEDPUBLICKEY = 132
    TYPE_UNIX_SOCKET_PATH = 133
    TYPE_PROXY_SERVICE_NAME = 134
    TYPE_SERVICE_NAME = 135
    TYPE_DEFAULT_PROTOCOL = 136
    TYPE_PROXY_CAINFO = 137
    TYPE_PROXY_CAPATH = 138
    TYPE_PROXY_TLSAUTH_USERNAME = 139
    TYPE_PROXY_TLSAUTH_PASSWORD = 140
    TYPE_PROXY_TLSAUTH_TYPE = 141
    TYPE_PROXY_SSLCERT = 142
    TYPE_PROXY_SSLCERTTYPE = 143
    TYPE_PROXY_SSLKEY = 144
    TYPE_PROXY_SSLKEYTYPE = 145
    TYPE_PROXY_KEYPASSWD = 146
    TYPE_PROXY_SSL_CIPHER_LIST = 147
    TYPE_PROXY_CRLFILE = 148
    TYPE_PRE_PROXY = 149
    TYPE_PROXY_PINNEDPUBLICKEY = 150
    TYPE_ABSTRACT_UNIX_SOCKET = 151
    TYPE_REQUEST_TARGET = 152
    TYPE_TLS13_CIPHERS = 153
    TYPE_PROXY_TLS13_CIPHERS = 154
    TYPE_SASL_AUTHZID = 155
    TYPE_PROXY_ISSUERCERT = 156
    TYPE_SSL_EC_CURVES = 157
    TYPE_AWS_SIGV4 = 158
    TYPE_REDIR_PROTOCOLS_STR = 159
    TYPE_HAPROXY_CLIENT_IP = 160
    TYPE_ECH = 161

    TYPE_PORT = 200
    TYPE_LOW_SPEED_LIMIT = 201
    TYPE_LOW_SPEED_TIME = 202
    TYPE_RESUME_FROM = 203
    TYPE_TIMEVALUE = 204
    TYPE_NOPROGRESS = 205
    TYPE_FAILONERROR = 206
    TYPE_DIRLISTONLY = 207
    TYPE_APPEND = 208
    TYPE_TRANSFERTEXT = 209
    TYPE_AUTOREFERER = 210
    TYPE_PROXYPORT = 211
    TYPE_POSTFIELDSIZE = 212
    TYPE_HTTPPROXYTUNNEL = 213
    TYPE_SSL_VERIFYPEER = 214
    TYPE_MAXREDIRS = 215
    TYPE_FILETIME = 216
    TYPE_MAXCONNECTS = 217
    TYPE_FRESH_CONNECT = 218
    TYPE_FORBID_REUSE = 219
    TYPE_CONNECTTIMEOUT = 220
    TYPE_HTTPGET = 221
    TYPE_SSL_VERIFYHOST = 222
    TYPE_FTP_USE_EPSV = 223
    TYPE_SSLENGINE_DEFAULT = 224
    TYPE_DNS_CACHE_TIMEOUT = 225
    TYPE_COOKIESESSION = 226
    TYPE_BUFFERSIZE = 227
    TYPE_NOSIGNAL = 228
    TYPE_UNRESTRICTED_AUTH = 229
    TYPE_FTP_USE_EPRT = 230
    TYPE_FTP_CREATE_MISSING_DIRS = 231
    TYPE_MAXFILESIZE = 232
    TYPE_TCP_NODELAY = 233
    TYPE_IGNORE_CONTENT_LENGTH = 234
    TYPE_FTP_SKIP_PASV_IP = 235
    TYPE_LOCALPORT = 236
    TYPE_LOCALPORTRANGE = 237
    TYPE_SSL_SESSIONID_CACHE = 238
    TYPE_FTP_SSL_CCC = 239
    TYPE_CONNECTTIMEOUT_MS = 240
    TYPE_HTTP_TRANSFER_DECODING = 241
    TYPE_HTTP_CONTENT_DECODING = 242
    TYPE_NEW_FILE_PERMS = 243
    TYPE_NEW_DIRECTORY_PERMS = 244
    TYPE_PROXY_TRANSFER_MODE = 245
    TYPE_ADDRESS_SCOPE = 246
    TYPE_CERTINFO = 247
    TYPE_TFTP_BLKSIZE = 248
    TYPE_SOCKS5_GSSAPI_NEC = 249
    TYPE_FTP_USE_PRET = 250
    TYPE_RTSP_SERVER_CSEQ = 251
    TYPE_TRANSFER_ENCODING = 252
    TYPE_ACCEPTTIMEOUT_MS = 253
    TYPE_TCP_KEEPALIVE = 254
    TYPE_TCP_KEEPIDLE = 255
    TYPE_TCP_KEEPINTVL = 256
    TYPE_SASL_IR = 257
    TYPE_SSL_ENABLE_ALPN = 258
    TYPE_EXPECT_100_TIMEOUT_MS = 259
    TYPE_SSL_VERIFYSTATUS = 260
    TYPE_SSL_FALSESTART = 261
    TYPE_PATH_AS_IS = 262
    TYPE_PIPEWAIT = 263
    TYPE_STREAM_WEIGHT = 264
    TYPE_TFTP_NO_OPTIONS = 265
    TYPE_TCP_FASTOPEN = 266
    TYPE_KEEP_SENDING_ON_ERROR = 267
    TYPE_PROXY_SSL_VERIFYPEER = 268
    TYPE_PROXY_SSL_VERIFYHOST = 269
    TYPE_PROXY_SSL_OPTIONS = 270
    TYPE_SUPPRESS_CONNECT_HEADERS = 271
    TYPE_SOCKS5_AUTH = 272
    TYPE_SSH_COMPRESSION = 273
    TYPE_HAPPY_EYEBALLS_TIMEOUT_MS = 274
    TYPE_HAPROXYPROTOCOL = 275
    TYPE_DNS_SHUFFLE_ADDRESSES = 276
    TYPE_DISALLOW_USERNAME_IN_URL = 277
    TYPE_UPLOAD_BUFFERSIZE = 278
    TYPE_UPKEEP_INTERVAL_MS = 279
    TYPE_HTTP09_ALLOWED = 280
    TYPE_ALTSVC_CTRL = 281
    TYPE_MAXAGE_CONN = 282
    TYPE_MAIL_RCPT_ALLOWFAILS = 283
    TYPE_HSTS_CTRL = 284
    TYPE_DOH_SSL_VERIFYPEER = 285
    TYPE_DOH_SSL_VERIFYHOST = 286
    TYPE_DOH_SSL_VERIFYSTATUS = 287
    TYPE_MAXLIFETIME_CONN = 288
    TYPE_MIME_OPTIONS = 289
    TYPE_CA_CACHE_TIMEOUT = 290
    TYPE_QUICK_EXIT = 291
    TYPE_SERVER_RESPONSE_TIMEOUT_MS = 292
    TYPE_TCP_KEEPCNT = 293

    TYPE_SSLVERSION = 300
    TYPE_TIMECONDITION = 301
    TYPE_PROXYAUTH = 302
    TYPE_IPRESOLVE = 303
    TYPE_USE_SSL = 304
    TYPE_FTPSSLAUTH = 305
    TYPE_FTP_FILEMETHOD = 306
    TYPE_SSH_AUTH_TYPES = 307
    TYPE_POSTREDIR = 308
    TYPE_GSSAPI_DELEGATION = 309
    TYPE_SSL_OPTIONS = 310
    TYPE_HEADEROPT = 311
    TYPE_PROXY_SSLVERSION = 312

    TYPE_RESUME_FROM_LARGE = 320
    TYPE_MAXFILESIZE_LARGE = 321
    TYPE_POSTFIELDSIZE_LARGE = 322
    TYPE_MAX_SEND_SPEED_LARGE = 323
    TYPE_MAX_RECV_SPEED_LARGE = 324
    TYPE_TIMEVALUE_LARGE = 325

    TYPEMAP = {
        # Connection and response TLVs
        TYPE_URL: "CURLOPT_URL",
        TYPE_RSP0: "Server banner (sent on connection)",
        TYPE_RSP1: "Server response 1",
        TYPE_RSP2: "Server response 2",
        TYPE_RSP3: "Server response 3",
        TYPE_RSP4: "Server response 4",
        TYPE_RSP5: "Server response 5",
        TYPE_RSP6: "Server response 6",
        TYPE_RSP7: "Server response 7",
        TYPE_RSP8: "Server response 8",
        TYPE_RSP9: "Server response 9",
        TYPE_RSP10: "Server response 10",
        TYPE_SECRSP0: "Socket 2: Server banner (sent on connection)",
        TYPE_SECRSP1: "Socket 2: Server response 1",
        # String-based libcurl options
        TYPE_USERNAME: "CURLOPT_USERNAME",
        TYPE_PASSWORD: "CURLOPT_PASSWORD",
        TYPE_POSTFIELDS: "CURLOPT_POSTFIELDS",
        TYPE_HEADER: "CURLOPT_HEADER",
        TYPE_COOKIE: "CURLOPT_COOKIE",
        TYPE_UPLOAD1: "CURLOPT_UPLOAD / CURLOPT_INFILESIZE_LARGE",
        TYPE_RANGE: "CURLOPT_RANGE",
        TYPE_CUSTOMREQUEST: "CURLOPT_CUSTOMREQUEST",
        TYPE_MAIL_RECIPIENT: "curl_slist_append(mail recipient)",
        TYPE_MAIL_FROM: "CURLOPT_MAIL_FROM",
        TYPE_MIME_PART: "curl_mime_addpart",
        TYPE_MIME_PART_NAME: "curl_mime_name",
        TYPE_MIME_PART_DATA: "curl_mime_data",
        TYPE_HTTPAUTH: "CURLOPT_HTTPAUTH",
        TYPE_OPTHEADER: "CURLOPT_HEADER",
        TYPE_NOBODY: "CURLOPT_NOBODY",
        TYPE_FOLLOWLOCATION: "CURLOPT_FOLLOWLOCATION",
        TYPE_ACCEPT_ENCODING: "CURLOPT_ACCEPT_ENCODING",
        TYPE_WILDCARDMATCH: "CURLOPT_WILDCARDMATCH",
        TYPE_RTSP_REQUEST: "CURLOPT_RTSP_REQUEST",
        TYPE_RTSP_SESSION_ID: "CURLOPT_RTSP_SESSION_ID",
        TYPE_RTSP_STREAM_URI: "CURLOPT_RTSP_STREAM_URI",
        TYPE_RTSP_TRANSPORT: "CURLOPT_RTSP_TRANSPORT",
        TYPE_RTSP_CLIENT_CSEQ: "CURLOPT_RTSP_CLIENT_CSEQ",
        TYPE_MAIL_AUTH: "CURLOPT_MAIL_AUTH",
        TYPE_HTTP_VERSION: "CURLOPT_HTTP_VERSION",
        TYPE_DOH_URL: "CURLOPT_DOH_URL",
        TYPE_LOGIN_OPTIONS: "CURLOPT_LOGIN_OPTIONS",
        TYPE_XOAUTH2_BEARER: "CURLOPT_XOAUTH2_BEARER",
        TYPE_USERPWD: "CURLOPT_USERPWD",
        TYPE_USERAGENT: "CURLOPT_USERAGENT",
        TYPE_NETRC: "CURLOPT_NETRC",
        TYPE_SSH_HOST_PUBLIC_KEY_SHA256: "CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256",
        TYPE_POST: "CURLOPT_POST",
        TYPE_WS_OPTIONS: "CURLOPT_WS_OPTIONS",
        TYPE_CONNECT_ONLY: "CURLOPT_CONNECT_ONLY",
        TYPE_HSTS: "CURLOPT_HSTS",
        TYPE_HTTPPOSTBODY: "CURLOPT_HTTPPOST",
        TYPE_PROXY: "CURLOPT_PROXY",
        TYPE_PROXYTYPE: "CURLOPT_PROXYTYPE",
        TYPE_PROXYUSERPWD: "CURLOPT_PROXYUSERPWD",
        TYPE_REFERER: "CURLOPT_REFERER",
        TYPE_FTPPORT: "CURLOPT_FTPPORT",
        TYPE_SSLCERT: "CURLOPT_SSLCERT",
        TYPE_KEYPASSWD: "CURLOPT_KEYPASSWD",
        TYPE_INTERFACE: "CURLOPT_INTERFACE",
        TYPE_KRBLEVEL: "CURLOPT_KRBLEVEL",
        TYPE_CAINFO: "CURLOPT_CAINFO",
        TYPE_SSL_CIPHER_LIST: "CURLOPT_SSL_CIPHER_LIST",
        TYPE_SSLCERTTYPE: "CURLOPT_SSLCERTTYPE",
        TYPE_SSLKEY: "CURLOPT_SSLKEY",
        TYPE_SSLKEYTYPE: "CURLOPT_SSLKEYTYPE",
        TYPE_SSLENGINE: "CURLOPT_SSLENGINE",
        TYPE_CAPATH: "CURLOPT_CAPATH",
        TYPE_FTP_ACCOUNT: "CURLOPT_FTP_ACCOUNT",
        TYPE_COOKIELIST: "CURLOPT_COOKIELIST",
        TYPE_FTP_ALTERNATIVE_TO_USER: "CURLOPT_FTP_ALTERNATIVE_TO_USER",
        TYPE_SSH_PUBLIC_KEYFILE: "CURLOPT_SSH_PUBLIC_KEYFILE",
        TYPE_SSH_PRIVATE_KEYFILE: "CURLOPT_SSH_PRIVATE_KEYFILE",
        TYPE_SSH_HOST_PUBLIC_KEY_MD5: "CURLOPT_SSH_HOST_PUBLIC_KEY_MD5",
        TYPE_ISSUERCERT: "CURLOPT_ISSUERCERT",
        TYPE_PROXYUSERNAME: "CURLOPT_PROXYUSERNAME",
        TYPE_PROXYPASSWORD: "CURLOPT_PROXYPASSWORD",
        TYPE_NOPROXY: "CURLOPT_NOPROXY",
        TYPE_SSH_KNOWNHOSTS: "CURLOPT_SSH_KNOWNHOSTS",
        TYPE_TLSAUTH_USERNAME: "CURLOPT_TLSAUTH_USERNAME",
        TYPE_TLSAUTH_PASSWORD: "CURLOPT_TLSAUTH_PASSWORD",
        TYPE_TLSAUTH_TYPE: "CURLOPT_TLSAUTH_TYPE",
        TYPE_DNS_SERVERS: "CURLOPT_DNS_SERVERS",
        TYPE_DNS_INTERFACE: "CURLOPT_DNS_INTERFACE",
        TYPE_DNS_LOCAL_IP4: "CURLOPT_DNS_LOCAL_IP4",
        TYPE_DNS_LOCAL_IP6: "CURLOPT_DNS_LOCAL_IP6",
        TYPE_PINNEDPUBLICKEY: "CURLOPT_PINNEDPUBLICKEY",
        TYPE_UNIX_SOCKET_PATH: "CURLOPT_UNIX_SOCKET_PATH",
        TYPE_PROXY_SERVICE_NAME: "CURLOPT_PROXY_SERVICE_NAME",
        TYPE_SERVICE_NAME: "CURLOPT_SERVICE_NAME",
        TYPE_DEFAULT_PROTOCOL: "CURLOPT_DEFAULT_PROTOCOL",
        TYPE_PROXY_CAINFO: "CURLOPT_PROXY_CAINFO",
        TYPE_PROXY_CAPATH: "CURLOPT_PROXY_CAPATH",
        TYPE_PROXY_TLSAUTH_USERNAME: "CURLOPT_PROXY_TLSAUTH_USERNAME",
        TYPE_PROXY_TLSAUTH_PASSWORD: "CURLOPT_PROXY_TLSAUTH_PASSWORD",
        TYPE_PROXY_TLSAUTH_TYPE: "CURLOPT_PROXY_TLSAUTH_TYPE",
        TYPE_PROXY_SSLCERT: "CURLOPT_PROXY_SSLCERT",
        TYPE_PROXY_SSLCERTTYPE: "CURLOPT_PROXY_SSLCERTTYPE",
        TYPE_PROXY_SSLKEY: "CURLOPT_PROXY_SSLKEY",
        TYPE_PROXY_SSLKEYTYPE: "CURLOPT_PROXY_SSLKEYTYPE",
        TYPE_PROXY_KEYPASSWD: "CURLOPT_PROXY_KEYPASSWD",
        TYPE_PROXY_SSL_CIPHER_LIST: "CURLOPT_PROXY_SSL_CIPHER_LIST",
        TYPE_PROXY_CRLFILE: "CURLOPT_PROXY_CRLFILE",
        TYPE_PRE_PROXY: "CURLOPT_PRE_PROXY",
        TYPE_PROXY_PINNEDPUBLICKEY: "CURLOPT_PROXY_PINNEDPUBLICKEY",
        TYPE_ABSTRACT_UNIX_SOCKET: "CURLOPT_ABSTRACT_UNIX_SOCKET",
        TYPE_REQUEST_TARGET: "CURLOPT_REQUEST_TARGET",
        TYPE_TLS13_CIPHERS: "CURLOPT_TLS13_CIPHERS",
        TYPE_PROXY_TLS13_CIPHERS: "CURLOPT_PROXY_TLS13_CIPHERS",
        TYPE_SASL_AUTHZID: "CURLOPT_SASL_AUTHZID",
        TYPE_PROXY_ISSUERCERT: "CURLOPT_PROXY_ISSUERCERT",
        TYPE_SSL_EC_CURVES: "CURLOPT_SSL_EC_CURVES",
        TYPE_AWS_SIGV4: "CURLOPT_AWS_SIGV4",
        TYPE_REDIR_PROTOCOLS_STR: "CURLOPT_REDIR_PROTOCOLS_STR",
        TYPE_HAPROXY_CLIENT_IP: "CURLOPT_HAPROXY_CLIENT_IP",
        TYPE_ECH: "CURLOPT_ECH",
        # Numeric libcurl options (u32 and enums)
        TYPE_PORT: "CURLOPT_PORT",
        TYPE_LOW_SPEED_LIMIT: "CURLOPT_LOW_SPEED_LIMIT",
        TYPE_LOW_SPEED_TIME: "CURLOPT_LOW_SPEED_TIME",
        TYPE_RESUME_FROM: "CURLOPT_RESUME_FROM",
        TYPE_TIMEVALUE: "CURLOPT_TIMEVALUE",
        TYPE_NOPROGRESS: "CURLOPT_NOPROGRESS",
        TYPE_FAILONERROR: "CURLOPT_FAILONERROR",
        TYPE_DIRLISTONLY: "CURLOPT_DIRLISTONLY",
        TYPE_APPEND: "CURLOPT_APPEND",
        TYPE_TRANSFERTEXT: "CURLOPT_TRANSFERTEXT",
        TYPE_AUTOREFERER: "CURLOPT_AUTOREFERER",
        TYPE_PROXYPORT: "CURLOPT_PROXYPORT",
        TYPE_POSTFIELDSIZE: "CURLOPT_POSTFIELDSIZE",
        TYPE_HTTPPROXYTUNNEL: "CURLOPT_HTTPPROXYTUNNEL",
        TYPE_SSL_VERIFYPEER: "CURLOPT_SSL_VERIFYPEER",
        TYPE_MAXREDIRS: "CURLOPT_MAXREDIRS",
        TYPE_FILETIME: "CURLOPT_FILETIME",
        TYPE_MAXCONNECTS: "CURLOPT_MAXCONNECTS",
        TYPE_FRESH_CONNECT: "CURLOPT_FRESH_CONNECT",
        TYPE_FORBID_REUSE: "CURLOPT_FORBID_REUSE",
        TYPE_CONNECTTIMEOUT: "CURLOPT_CONNECTTIMEOUT",
        TYPE_HTTPGET: "CURLOPT_HTTPGET",
        TYPE_SSL_VERIFYHOST: "CURLOPT_SSL_VERIFYHOST",
        TYPE_FTP_USE_EPSV: "CURLOPT_FTP_USE_EPSV",
        TYPE_SSLENGINE_DEFAULT: "CURLOPT_SSLENGINE_DEFAULT",
        TYPE_DNS_CACHE_TIMEOUT: "CURLOPT_DNS_CACHE_TIMEOUT",
        TYPE_COOKIESESSION: "CURLOPT_COOKIESESSION",
        TYPE_BUFFERSIZE: "CURLOPT_BUFFERSIZE",
        TYPE_NOSIGNAL: "CURLOPT_NOSIGNAL",
        TYPE_UNRESTRICTED_AUTH: "CURLOPT_UNRESTRICTED_AUTH",
        TYPE_FTP_USE_EPRT: "CURLOPT_FTP_USE_EPRT",
        TYPE_FTP_CREATE_MISSING_DIRS: "CURLOPT_FTP_CREATE_MISSING_DIRS",
        TYPE_MAXFILESIZE: "CURLOPT_MAXFILESIZE",
        TYPE_TCP_NODELAY: "CURLOPT_TCP_NODELAY",
        TYPE_IGNORE_CONTENT_LENGTH: "CURLOPT_IGNORE_CONTENT_LENGTH",
        TYPE_FTP_SKIP_PASV_IP: "CURLOPT_FTP_SKIP_PASV_IP",
        TYPE_LOCALPORT: "CURLOPT_LOCALPORT",
        TYPE_LOCALPORTRANGE: "CURLOPT_LOCALPORTRANGE",
        TYPE_SSL_SESSIONID_CACHE: "CURLOPT_SSL_SESSIONID_CACHE",
        TYPE_FTP_SSL_CCC: "CURLOPT_FTP_SSL_CCC",
        TYPE_CONNECTTIMEOUT_MS: "CURLOPT_CONNECTTIMEOUT_MS",
        TYPE_HTTP_TRANSFER_DECODING: "CURLOPT_HTTP_TRANSFER_DECODING",
        TYPE_HTTP_CONTENT_DECODING: "CURLOPT_HTTP_CONTENT_DECODING",
        TYPE_NEW_FILE_PERMS: "CURLOPT_NEW_FILE_PERMS",
        TYPE_NEW_DIRECTORY_PERMS: "CURLOPT_NEW_DIRECTORY_PERMS",
        TYPE_PROXY_TRANSFER_MODE: "CURLOPT_PROXY_TRANSFER_MODE",
        TYPE_ADDRESS_SCOPE: "CURLOPT_ADDRESS_SCOPE",
        TYPE_CERTINFO: "CURLOPT_CERTINFO",
        TYPE_TFTP_BLKSIZE: "CURLOPT_TFTP_BLKSIZE",
        TYPE_SOCKS5_GSSAPI_NEC: "CURLOPT_SOCKS5_GSSAPI_NEC",
        TYPE_FTP_USE_PRET: "CURLOPT_FTP_USE_PRET",
        TYPE_RTSP_SERVER_CSEQ: "CURLOPT_RTSP_SERVER_CSEQ",
        TYPE_TRANSFER_ENCODING: "CURLOPT_TRANSFER_ENCODING",
        TYPE_ACCEPTTIMEOUT_MS: "CURLOPT_ACCEPTTIMEOUT_MS",
        TYPE_TCP_KEEPALIVE: "CURLOPT_TCP_KEEPALIVE",
        TYPE_TCP_KEEPIDLE: "CURLOPT_TCP_KEEPIDLE",
        TYPE_TCP_KEEPINTVL: "CURLOPT_TCP_KEEPINTVL",
        TYPE_SASL_IR: "CURLOPT_SASL_IR",
        TYPE_SSL_ENABLE_ALPN: "CURLOPT_SSL_ENABLE_ALPN",
        TYPE_EXPECT_100_TIMEOUT_MS: "CURLOPT_EXPECT_100_TIMEOUT_MS",
        TYPE_SSL_VERIFYSTATUS: "CURLOPT_SSL_VERIFYSTATUS",
        TYPE_SSL_FALSESTART: "CURLOPT_SSL_FALSESTART",
        TYPE_PATH_AS_IS: "CURLOPT_PATH_AS_IS",
        TYPE_PIPEWAIT: "CURLOPT_PIPEWAIT",
        TYPE_STREAM_WEIGHT: "CURLOPT_STREAM_WEIGHT",
        TYPE_TFTP_NO_OPTIONS: "CURLOPT_TFTP_NO_OPTIONS",
        TYPE_TCP_FASTOPEN: "CURLOPT_TCP_FASTOPEN",
        TYPE_KEEP_SENDING_ON_ERROR: "CURLOPT_KEEP_SENDING_ON_ERROR",
        TYPE_PROXY_SSL_VERIFYPEER: "CURLOPT_PROXY_SSL_VERIFYPEER",
        TYPE_PROXY_SSL_VERIFYHOST: "CURLOPT_PROXY_SSL_VERIFYHOST",
        TYPE_PROXY_SSL_OPTIONS: "CURLOPT_PROXY_SSL_OPTIONS",
        TYPE_SUPPRESS_CONNECT_HEADERS: "CURLOPT_SUPPRESS_CONNECT_HEADERS",
        TYPE_SOCKS5_AUTH: "CURLOPT_SOCKS5_AUTH",
        TYPE_SSH_COMPRESSION: "CURLOPT_SSH_COMPRESSION",
        TYPE_HAPPY_EYEBALLS_TIMEOUT_MS: "CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS",
        TYPE_HAPROXYPROTOCOL: "CURLOPT_HAPROXYPROTOCOL",
        TYPE_DNS_SHUFFLE_ADDRESSES: "CURLOPT_DNS_SHUFFLE_ADDRESSES",
        TYPE_DISALLOW_USERNAME_IN_URL: "CURLOPT_DISALLOW_USERNAME_IN_URL",
        TYPE_UPLOAD_BUFFERSIZE: "CURLOPT_UPLOAD_BUFFERSIZE",
        TYPE_UPKEEP_INTERVAL_MS: "CURLOPT_UPKEEP_INTERVAL_MS",
        TYPE_HTTP09_ALLOWED: "CURLOPT_HTTP09_ALLOWED",
        TYPE_ALTSVC_CTRL: "CURLOPT_ALTSVC_CTRL",
        TYPE_MAXAGE_CONN: "CURLOPT_MAXAGE_CONN",
        TYPE_MAIL_RCPT_ALLOWFAILS: "CURLOPT_MAIL_RCPT_ALLOWFAILS",
        TYPE_HSTS_CTRL: "CURLOPT_HSTS_CTRL",
        TYPE_DOH_SSL_VERIFYPEER: "CURLOPT_DOH_SSL_VERIFYPEER",
        TYPE_DOH_SSL_VERIFYHOST: "CURLOPT_DOH_SSL_VERIFYHOST",
        TYPE_DOH_SSL_VERIFYSTATUS: "CURLOPT_DOH_SSL_VERIFYSTATUS",
        TYPE_MAXLIFETIME_CONN: "CURLOPT_MAXLIFETIME_CONN",
        TYPE_MIME_OPTIONS: "CURLOPT_MIME_OPTIONS",
        TYPE_CA_CACHE_TIMEOUT: "CURLOPT_CA_CACHE_TIMEOUT",
        TYPE_QUICK_EXIT: "CURLOPT_QUICK_EXIT",
        TYPE_SERVER_RESPONSE_TIMEOUT_MS: "CURLOPT_SERVER_RESPONSE_TIMEOUT_MS",
        TYPE_TCP_KEEPCNT: "CURLOPT_TCP_KEEPCNT",
        TYPE_SSLVERSION: "CURLOPT_SSLVERSION",
        TYPE_TIMECONDITION: "CURLOPT_TIMECONDITION",
        TYPE_PROXYAUTH: "CURLOPT_PROXYAUTH",
        TYPE_IPRESOLVE: "CURLOPT_IPRESOLVE",
        TYPE_USE_SSL: "CURLOPT_USE_SSL",
        TYPE_FTPSSLAUTH: "CURLOPT_FTPSSLAUTH",
        TYPE_FTP_FILEMETHOD: "CURLOPT_FTP_FILEMETHOD",
        TYPE_SSH_AUTH_TYPES: "CURLOPT_SSH_AUTH_TYPES",
        TYPE_POSTREDIR: "CURLOPT_POSTREDIR",
        TYPE_GSSAPI_DELEGATION: "CURLOPT_GSSAPI_DELEGATION",
        TYPE_SSL_OPTIONS: "CURLOPT_SSL_OPTIONS",
        TYPE_HEADEROPT: "CURLOPT_HEADEROPT",
        TYPE_PROXY_SSLVERSION: "CURLOPT_PROXY_SSLVERSION",
        TYPE_RESUME_FROM_LARGE: "CURLOPT_RESUME_FROM_LARGE",
        TYPE_MAXFILESIZE_LARGE: "CURLOPT_MAXFILESIZE_LARGE",
        TYPE_POSTFIELDSIZE_LARGE: "CURLOPT_POSTFIELDSIZE_LARGE",
        TYPE_MAX_SEND_SPEED_LARGE: "CURLOPT_MAX_SEND_SPEED_LARGE",
        TYPE_MAX_RECV_SPEED_LARGE: "CURLOPT_MAX_RECV_SPEED_LARGE",
        TYPE_TIMEVALUE_LARGE: "CURLOPT_TIMEVALUE_LARGE",
    }


class TLVEncoder(BaseType):
    """Class for encoding TLVs"""

    def __init__(self, output: BinaryIO, test_data: TestData) -> None:
        """Create a TLVEncoder object"""
        self.output = output
        self.test_data = test_data

    def write_string(self, tlv_type: int, wstring: str) -> None:
        """Write a string TLV to the output"""
        data = wstring.encode("utf-8")
        self.write_tlv(tlv_type, len(data), data)

    def write_u32(self, tlv_type: int, num: int) -> None:
        """Write an unsigned 32-bit integer TLV to the output"""
        data = struct.pack("!L", num)
        self.write_tlv(tlv_type, len(data), data)

    def write_bytes(self, tlv_type: int, bytedata: bytes) -> None:
        """Write a bytes TLV to the output"""
        self.write_tlv(tlv_type, len(bytedata), bytedata)

    def maybe_write_string(self, tlv_type: int, wstring: Optional[str]) -> None:
        """Write a string TLV to the output if specified"""
        if wstring is not None:
            self.write_string(tlv_type, wstring)

    def maybe_write_u32(self, tlv_type: int, num: Optional[int]) -> None:
        """Write an unsigned 32-bit integer TLV to the output if specified"""
        if num is not None:
            self.write_u32(tlv_type, num)

    def maybe_write_response(
        self, rsp_type: int, rsp: Optional[str], rsp_file: Optional[Path], rsp_test: int
    ) -> None:
        """Write a response TLV to the output if specified"""
        if rsp:
            self.write_bytes(rsp_type, rsp.encode("utf-8"))
        elif rsp_file:
            with open(rsp_file, "rb") as g:
                self.write_bytes(rsp_type, g.read())
        elif rsp_test:
            wstring = self.test_data.get_test_data(rsp_test)
            self.write_bytes(rsp_type, wstring.encode("utf-8"))

    def write_mimepart(self, namevalue: str) -> None:
        """Write a MIME part TLV to the output"""
        (name, value) = namevalue.split(":", 1)

        # Create some mimepart TLVs for the name and value
        name_bytes = name.encode("utf-8")
        value_bytes = value.encode("utf-8")

        name_tlv = self.encode_tlv(
            self.TYPE_MIME_PART_NAME, len(name_bytes), name_bytes
        )
        value_tlv = self.encode_tlv(
            self.TYPE_MIME_PART_DATA, len(value_bytes), value_bytes
        )

        # Combine the two TLVs into a single TLV.
        part_tlv = name_tlv + value_tlv
        self.write_tlv(self.TYPE_MIME_PART, len(part_tlv), part_tlv)

    def encode_tlv(
        self, tlv_type: int, tlv_length: int, tlv_data: Optional[bytes] = None
    ) -> bytes:
        """Encodes the Type, Length, and Value into a bytes array"""
        log.debug(
            "Encoding TLV %r, length %d, data %r",
            self.TYPEMAP.get(tlv_type, "<unknown>"),
            tlv_length,
            tlv_data,
        )

        data = struct.pack("!H", tlv_type)
        data = data + struct.pack("!L", tlv_length)
        if tlv_data:
            data = data + tlv_data

        return data

    def write_tlv(
        self, tlv_type: int, tlv_length: int, tlv_data: Optional[bytes] = None
    ) -> None:
        """Writes an encoded TLV to the output as bytes"""
        log.debug(
            "Writing TLV %r, length %d, data %r",
            self.TYPEMAP.get(tlv_type, "<unknown>"),
            tlv_length,
            tlv_data,
        )

        data = self.encode_tlv(tlv_type, tlv_length, tlv_data)
        self.output.write(data)


class TLVContents(BaseType):
    """Class for TLV contents"""

    TLV_DECODE_FMT = "!HL"
    TLV_DECODE_FMT_LEN = struct.calcsize(TLV_DECODE_FMT)

    def __init__(self, data: bytes) -> None:
        """Create a TLVContents object"""
        # Parse the data to populate the TLV fields
        (stype, slen) = struct.unpack(
            self.TLV_DECODE_FMT, data[0 : self.TLV_DECODE_FMT_LEN]
        )
        self.type = int(stype)
        self.length = int(slen)

        # Get the remaining data and store it.
        self.data = data[
            self.TLV_DECODE_FMT_LEN : self.TLV_DECODE_FMT_LEN + self.length
        ]

    def __repr__(self) -> str:
        """Return a string representation of the TLVContents object"""
        stype = self.TYPEMAP.get(self.type, "<unknown>")
        return (
            f"{self.__class__.__name__}(type={stype!r} ({self.type!r}), "
            f"length={self.length!r}, data={self.data!r})"
        )

    def total_length(self) -> int:
        """Return the total length of the TLV, including the header"""
        return self.TLV_DECODE_FMT_LEN + self.length


class TLVDecoder(BaseType):
    """Class for decoding TLVs"""

    def __init__(self, inputdata: bytes) -> None:
        """Create a TLVDecoder object"""
        self.inputdata = inputdata
        self.pos = 0
        self.tlv: Optional["TLVContents"] = None

    def __iter__(self) -> "TLVDecoder":
        """Return an iterator for the TLVs"""
        self.pos = 0
        self.tlv = None
        return self

    def __next__(self) -> "TLVContents":
        """Return the next TLV in the input data"""
        if self.tlv:
            self.pos += self.tlv.total_length()

        if (self.pos + TLVContents.TLV_DECODE_FMT_LEN) > len(self.inputdata):
            raise StopIteration

        # Get the next TLV
        self.tlv = TLVContents(self.inputdata[self.pos :])
        return self.tlv

    next = __next__
