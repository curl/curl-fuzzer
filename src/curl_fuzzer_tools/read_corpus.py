#!/usr/bin/env python3
#
"""Simple script which reads corpus files."""

import argparse
import logging
from pathlib import Path

from curl_fuzzer_tools import common_logging
from curl_fuzzer_tools.corpus import TLVDecoder

log = logging.getLogger(__name__)


def read_corpus(corpus_file: Path) -> None:
    """Read the given corpus file and print the TLVs."""
    with open(corpus_file, "rb") as f:
        dec = TLVDecoder(f.read())
        for tlv in dec:
            print(tlv)


def main() -> None:
    """Main function"""
    parser = argparse.ArgumentParser()
    parser.add_argument(
        "input",
        help=(
            "Corpus file to read; if generated by oss-fuzz, "
            "this will start with 'clusterfuzz'"
        ),
    )
    args = parser.parse_args()

    corpus_file = Path(args.input)
    if not corpus_file.exists():
        raise FileNotFoundError(f"Corpus file {args.input} does not exist")

    read_corpus(corpus_file)


def run() -> None:
    """Set up common logging and run the main function."""
    common_logging(__name__, __file__)
    main()


if __name__ == "__main__":
    run()
